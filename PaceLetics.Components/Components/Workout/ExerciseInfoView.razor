@using WorkoutModule.Contracts
@using MudBlazor
@using WorkoutModule.Enums;
@using MudBlazor.Extensions.Components.ObjectEdit.Options
@using MudBlazor.Extensions;
@code {
    [Parameter]
    public IExerciseInfo Exercise { get; set; }
    
    

    private string GetImagePath(string imagefile)
    {
        return "images/exercises/" + imagefile;
    }

    private Color GetCardColor(Level level)
    {
        switch (level)
        {
            case Level.Easy:
                return Color.Info;
            case Level.Moderate:
                return Color.Success;
            case Level.Advanced:
                return Color.Warning;
            case Level.Epic:
                return Color.Error;
            default:
                return Color.Info;
        }
    }

    private string GetFontSize(Level level)
    {
        switch (level)
        {
            case Level.Easy:
                return "font-size:1.0rem;";
            case Level.Moderate:
                return "font-size:.5rem;";
            case Level.Advanced:
                return "font-size:.5rem;";
            case Level.Epic:
                return "font-size:1.0rem;";
            default:
                return "font-size:1.0rem;";
        }
    }

}

@if (Exercise != null)
{

        <MudCard Elevation="1" Outlined=false>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudStack Row="true" Spacing="5">
                        <MudText Color=@GetCardColor(Exercise.Level) Typo="Typo.h5">@Exercise.Name</MudText>
                        <MudAvatar Style="@GetFontSize(Exercise.Level)" Size="Size.Medium" Color="@GetCardColor(Exercise.Level)">
                            @Exercise.Level.ToString()
                        </MudAvatar>
                    </MudStack>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudStack AlignItems="AlignItems.Center">
                    <MudText Typo="Typo.body1">@Exercise.Description</MudText>
                    <div class="d-flex" style="height:100%">
                        <MudImage Fluid="true" Src="@GetImagePath(Exercise.ImageFilename)" Alt="@Exercise.Id" Class="rounded-lg" />
                    </div>
                <MudList Dense="true" DisablePadding="true">
                    <MudListItem><b>Dauer:</b> @Exercise.Duration Sekunden</MudListItem>
                    <MudListItem><b>Seitenwechsel:</b> @(Exercise.SwitchLeftRight ? "ja" : "Nein")</MudListItem>
                    @if (Exercise.Execution != null && Exercise.Execution.Any())
                    {
                        @foreach (var step in Exercise.Execution)
                        {
                            <MudListItem Icon="@Icons.Material.Filled.LabelImportant">@step</MudListItem>
                        }
                    }
                </MudList>

                </MudStack>


            </MudCardContent>
            
        </MudCard> 
}
else
    {
    <MudText Color="Color.Error">Exercise information is not available.</MudText>
    }

<style>
    .exercise-card {
        padding: 20px;
        margin: 20px;
    }
</style>
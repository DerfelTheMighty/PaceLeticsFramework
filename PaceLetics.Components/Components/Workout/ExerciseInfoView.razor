@using WorkoutModule.Contracts
@using MudBlazor
@using WorkoutModule.Enums;

@code {
    [Parameter]
    public IExerciseInfo Exercise { get; set; }

    private string GetImagePath(string imagefile)
    {
        return "images/exercises/" + imagefile;
    }

    private Color GetCardColor(Level level)
    {
        switch (level)
        {
            case Level.Easy:
                return Color.Info;
            case Level.Moderate:
                return Color.Success;
            case Level.Advanced:
                return Color.Warning;
            case Level.Epic:
                return Color.Error;
            default:
                return Color.Info;
        }
    }

    private string GetFontSize(Level level)
    {
        switch (level)
        {
            case Level.Easy:
                return "font-size:1.5rem;";
            case Level.Moderate:
                return "font-size:.75rem;";
            case Level.Advanced:
                return "font-size:.75rem;";
            case Level.Epic:
                return "font-size:1.5rem;";
            default:
                return "font-size:1.5rem;";
        }
    }

}

@if (Exercise != null)
{
        <MudCard Elevation="1" Outlined=true>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudStack Row="true" Spacing="5">
                        <MudText Color=@GetCardColor(Exercise.Level) Typo="Typo.h5">@Exercise.Name</MudText>
                        <MudAvatar Style="@GetFontSize(Exercise.Level)" Size="Size.Medium" Color="@GetCardColor(Exercise.Level)">
                            @Exercise.Level.ToString()
                        </MudAvatar>
                    </MudStack>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudStack AlignItems="AlignItems.Center">
                    <MudText Typo="Typo.body1">@Exercise.Description</MudText>
                    <div class="d-flex" style="height:100%">
                        <MudImage Fluid="true" Src="@GetImagePath(Exercise.ImageFilename)" Alt="@Exercise.Id" Class="rounded-lg" />
                    </div>
                </MudStack>
            </MudCardContent>
            
        </MudCard>

            @if (Exercise.Execution != null && Exercise.Execution.Any())
            {
            <MudExpansionPanels>
                <MudExpansionPanel Title="Execution Steps">
                    <MudList>
                        <MudListItem><b>Duration:</b> @Exercise.Duration seconds</MudListItem>
                        <MudListItem><b>Switch Left/Right:</b> @(Exercise.SwitchLeftRight ? "Yes" : "No")</MudListItem>
                        @foreach (var step in Exercise.Execution)
                        {
                            <MudListItem>@step</MudListItem>
                        }
                    </MudList>
                </MudExpansionPanel>
            </MudExpansionPanels>
        }
}
else
{
    <MudText Color="Color.Error">Exercise information is not available.</MudText>
}

<style>
    .exercise-card {
        padding: 20px;
        margin: 20px;
    }
</style>